{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","hooks/useForm.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","route/PublicRoute.js","route/PrivateRoute.js","route/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.956f042c.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal : '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout: '[event] Logout event',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login', \r\n    authStartRegister: '[auth] Start Register', \r\n    authStartTokenRenew: '[auth] Start token renew', \r\n    authLogout: '[auth] Logout', \r\n    \r\n}","import { types } from './../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        \r\n            case types.uiCloseModal:\r\n                return {\r\n                    ...state,\r\n                    modalOpen: false\r\n                }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from './../types/types';\r\n\r\n// {\r\n//     id: 'syajd5ds5f4dg5s,\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el café',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Ashley'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        \r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events, \r\n                    action.payload\r\n                ]\r\n            }\r\n        \r\n        case types.eventClearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return{\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        \r\n        case types.eventDeleted:\r\n            return{\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        \r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload, //Lo estoy desestructurando\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { uiReducer } from './uiReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { authReducer } from './authReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n    \r\n})","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","const baseUrl = process.env.REACT_APP_API_URL\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    )\r\n}","import { fetchConToken } from '../helpers/fetch';\r\nimport { types } from './../types/types';\r\nimport { prepareEvents } from './../helpers/prepareEvents';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n            \r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            // console.log(event);\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n            \r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from './events';\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from './../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from './../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'ashley@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Daniel',\r\n        rEmail: 'daniel@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        // console.log(formLoginValues);\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(rPassword1 !== rPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword1, rName));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>Salir</span>\r\n            </button>            \r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user} = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from './../types/types';\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n});\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment'\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from './../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n      top: '50%',\r\n      left: '50%',\r\n      right: 'auto',\r\n      bottom: 'auto',\r\n      marginRight: '-50%',\r\n      transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 =  now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    \r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui)\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }\r\n        else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    };\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    };\r\n\r\n    const handleSubmitForm= (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start); //Las convierto en variables de moment para un fácil manejo\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if(title.trim().length < 2){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdate(formValues))\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        // onAfterOpen={afterOpenModal}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n      >\r\n          <h1>{(activeEvent)? 'Editar evento' : 'Nuevo evento'}</h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n      </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from './../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from './../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { messages } from './../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { eventClearActiveEvent } from './../../actions/events';\r\n\r\nmoment.locale('es');\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n    \r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());    \r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        \r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        \r\n        const style= {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            \r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n                \r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (!isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isAuthenticated)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { LoginScreen } from './../components/auth/LoginScreen';\r\nimport { CalendarScreen } from './../components/calendar/CalendarScreen';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startChecking } from './../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return <h5>Espere...</h5>\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute exact path=\"/login\" component={LoginScreen} isAuthenticated={!!uid} />\r\n                    <PrivateRoute exact path=\"/\" component={CalendarScreen} isAuthenticated={!!uid}/>\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './route/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}